var express=require("express"),cors=require("cors"),fs=require("fs"),{Pool}=require("pg"),app=express();app.use(express.json()),app.use(cors());const helmet=require("helmet");app.use(helmet.noSniff()),app.use(helmet.xssFilter()),app.use(helmet.crossOriginEmbedderPolicy()),app.use(helmet.ieNoOpen()),app.use(helmet.hsts({maxAge:31536000,includeSubDomains:!0,preload:!0})),app.use(helmet.contentSecurityPolicy({directives:{defaultSrc:["'self'"],scriptSrc:["'self'"],styleSrc:["'self'"],imgSrc:["*"],connectSrc:["*"],fontSrc:["'self'"],objectSrc:["'none'"],upgradeInsecureRequests:[]}})),app.use(helmet.frameguard({action:"deny"}));const pool=new Pool({host:"ep-shy-haze-a5fn30na-pooler.us-east-2.aws.neon.tech",user:"neondb_owner",password:"8XJOeoMIWr0U",database:"neondb",port:5432,ssl:{rejectUnauthorized:!1}});pool.connect().then(()=>{console.log("Conexão ao banco de dados estabelecida com sucesso!")}).catch(err=>{console.error("Erro ao conectar ao banco de dados:",err)});async function encripta(){const comando="SELECT senha, nome FROM contas",result=await pool.query(comando);if(0===result.rows.length)throw new Error("Nenhuma senha encontrada no banco.");const senhaBanco=result.rows[0].senha,nomeBanco=result.rows[0].nome;let valor_=senhaBanco,valor=valor_.match(/.{1,4}/g),num=valor.length-1,num_c=["324l","ulle","eer4","jkd3","3rtd","errt","kkll","retr","erty","klkl","9990","tyty","rtyu","trtr","3456","rers","erxt","4r4r","etet","xxxx","errr","rett","reft","fggf","bfgf","hhjh"].length,num_cn=["@@lw","@£§€","er=3","-+23","olu3","res@","!!22","{{@@","ilo!","909$","@340"].length,nome="";for(;num>=0;){for(;num_c>=0||num_cn>=0;)valor[num]=="324l"&&(nome+="a"),valor[num]=="@@lw"&&(nome+=1),num_c-=1,num_cn-=1;num_c=26,num_cn=11,num-=1}return{nome:nomeBanco,senha:nome}}app.post("/info",async(req,res)=>{try{const val=req.body,senhaV=await encripta(),senhaValida=senhaV.senha,nome=senhaV.nome;console.log(senhaValida,nome),val.senha===senhaValida&&val.nome==nome?res.json({confirma:"w"}):res.status(401).json({error:"Senha inválida."})}catch(err){console.error(err),res.status(500).json({error:"Erro interno do servidor."})}}),app.post("/verefica",async(req,res)=>{try{const val=req.body,senhaV=await encripta(),senhaValida=senhaV.senha;val.senha===senhaValida?res.json({confirma:"w"}):res.status(401).json({error:"Senha inválida."})}catch(err){console.error(err),res.status(500).json({error:"Erro interno do servidor."})}}),app.post("/dados_gerentes",async(req,res)=>{var dados=req.body,comando=dados.comando;console.log(`${comando}`),console.log("dados apnhados",dados);try{const result=await pool.query(`${comando}`);0===result.rows.length&&(console.log("Nenhum dado encontrado na tabela cantina_mira."),res.json([]))}catch(err){console.error("Erro ao executar a consulta:",err),res.status(500).json({error:"Erro ao obter dados",details:err.message})}}),app.post("/dados_novidades",async(req,res)=>{var dados=req.body,comando=dados.comando;console.log(`${comando}`),console.log("dados apnhados",dados);try{const result=await pool.query(`${comando}`);0===result.rows.length&&(console.log("Nenhum dado encontrado na tabela cantina_mira."),res.json([]))}catch(err){console.error("Erro ao executar a consulta:",err),res.status(500).json({error:"Erro ao obter dados",details:err.message})}}),app.get("/dados_transfiridos",async(req,res)=>{try{const comando="select novidade,imagem_nome,titulo,preco from novidades",result=await pool.query(`${comando}`);if(0===result.rows.length)return console.log("Nenhum dado encontrado na tabela cantina_mira."),res.json([]);console.log("Dados pegos:",result.rows);var dd=JSON.stringify(result.rows);res.json(dd)}catch(err){console.error("Erro ao executar a consulta:",err),res.status(500).json({error:"Erro ao obter dados",details:err.message})}});const porta=8000;app.listen(porta,err=>{if(err)return void console.error("Tivemos um pequeno erro: "+err);console.log("Servidor conectado na porta "+porta)});
